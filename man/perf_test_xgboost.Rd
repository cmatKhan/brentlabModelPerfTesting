% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/perf_test_xgboost.R
\name{perf_test_xgboost}
\alias{perf_test_xgboost}
\title{Perform time and space evaluation on xgboost models on cpu or gpu}
\usage{
perf_test_xgboost(train_data, test_data, param, rounds, verbose = FALSE)
}
\arguments{
\item{train_data}{an xgboost xgb.dMatrix object of training data}

\item{test_data}{an xgboost xgb.dMatrix object of testing data}

\item{param}{a list object with certain parameters set. See the
xgboost documentation}

\item{rounds}{the xgboost number of rounds. See xgboost documentation.
this is the major affector of runtime}

\item{verbose}{set xgboost to verbosity 1 if TRUE, else 0 for no msgs.
Default to FALSE}
}
\value{
a dataframe with columns time_sec, model_ram_mb, total_mem_used_gb
}
\description{
run an xgboost with time and memory usage tracking. Purpose
of this is to gather simple resource metrics, namely runtime and memory
usage, on a single model.
}
\note{
Caret, for instance, offers some speed-ups which make cross
validation, eg, faster by exploiting some methods of sharing data
between fold models. This means that it might be slightly faster
to run 5-fold cv using caret than it is to run 5 individual
models outside of caret.
}
\examples{
test_data = readRDS(
  system.file('testing_gene_data.rds',
          package = 'brentlabModelPerfTesting'))
# suppressWarnings only here b/c test data is too small
# and stratified split is turned off. In general, do not suppressWarnings
suppressWarnings({input_data = prep_data(test_data)})

param <- list(
  objective = 'reg:squarederror',
  eval_metric = 'mae',
  subsample = 0.5,
  nthread = 1, # expecting to be overwritten
  max_depth=10, # expecting to be overwritten
  max_bin = 10, # expecting to be overwritten
  tree_method = 'hist')

perf_test_xgboost(input_data$train, input_data$test, param, 5)

\dontrun{
# using the gpu
test_data = readRDS(
  system.file('testing_gene_data.rds',
          package = 'brentlabModelPerfTesting'))
# suppressWarnings only here b/c test data is too small
# and stratified split is turned off. In general, do not suppressWarnings
suppressWarnings({input_data = prep_data(test_data)})

# this is an example using the gpu. Note that
# the number of rounds has been increased so that
# if you're using a nvidia gpu, you could watch this run using
# watch -n0.1 nvidia-smi
param <- list(
  objective = 'reg:squarederror',
  eval_metric = 'mae',
  subsample = 0.5,
  max_depth=10, # expecting to be overwritten
  max_bin = 10, # expecting to be overwritten
  tree_method = 'gpu_hist')

perf_test_xgboost(input_data$train, input_data$test, param, 1000)
}

}
